
4.Hafta 3. ödev

Katmmanları lusturdum : gitignore u terminalle oluştur


		----
		businessta boş manager ve sreviceleri oluştur ve bağla
		entitieste concrete ve DTOs klasörler aç
		bunları Ientitiye bağla-core entities
		ilk dto yu oluştur
		--
		data acces abstarct ve concrete
		coreda data access-abstract ve concrete
					abstarctta IBaserepository
					concretede efentityrepositorybase
					bunun methodalarini doldur
					isim kontrolü yap repobase doğru mu diye
		dataaccess concretede  context ve ef klasörleri
					efcoredbcontext
				ef klasörnde dalları yap
				dalları interfacelerine bağla
			
				data abstractaki ıdalları yap
				bu ıbaserepository iseter core da onu yap
		
		core
			efentityrepobase kodları nuget ister-kızanları çöz

		data accces ef..dalların uzantılarını yap -kızanları düzelt
		-
		Context e gel ve sen bir db contextsin de
		-


		sırada

		controller lar
				controlelr olstur
					accountdan  bilgiler ile giris olacak
							ben şöyle düşündüm
								2 farklı giriş seçeneği sunalım
								login wtihmail=>usermailLoginDto
								login withusername=>usenameLoginDto

				methodlar için services
							
							burada kaldık-hocanın videolarını izle notlarını worde yaz
							ödev yetişir

--

								Auth katmanınmız sadece login ve register yapsın
									- auth controller oluştur
									-login ve register methodlar
									-IAuthservice ve Authmanager oluştur
									- controllerda hangi dto olduğunu yaz
									-controller service methodlarını isteyecek -> Auth Service methodlarını  oluştur
									-service methodlarını managerlere boş da olsa implemente et
										-bunun için result classları oluşturman lazım=>core utilities results-ok
										-servicedeki acces token için jwt implementasyonu gerekli
										-core->utilities->security->hashing ve encryption
																	encryption: içerisincesecurity key helper(nuget:modeltokens istiyor) ve signingcredentialshelper
																	hashing:=> hashing helper hazır kodlarımı kkullandım
										-core.entities.concrete'e gel
																her ne kadar bu projede dbde claimlerimiz olamayaccak sa da 
																	operationclaims & account (gereken şekilde düzenlendi) & accountoperationclaim
																	şimdi utilities decurity jwt ye geç
														
										-core utilities-	SECURİTY'de JWT klasörü=> accesstoken clası ve Itokenhelper interfacei açalım
																					daha sonra -  önce token options oluştur ve kodla- daha sonra jwt helperi ıoluştur ve kodla
																						Dikkat önce tokenoptionsun olmasi sart
																							sonra  jwthelperda once accountu coz-ve tum user yazan yerleri account ile degis
																							IConfiguration'u microsoft ile çöz-nuget indir
																							jwt helper içerisindeki nota da bak
																							seucritykeyhelper'ı çöz-dikkat  security.encryption'umuz ile çöz
																							JwtSecurityTokenHandler =>System.IdentityModel.Tokens.Jwt yukle
																							-
																							gerikalanlarin cozumu için

																							core extensionsta claimextension ve claim principal extension
																							-claim extensionda gerekli yerleri çöz
																							-ClaimsPrincipalExtensions u da aynı şekilde
																							--
																							jwt helper a don ve geri kalanlari coz
																							--




															auth controller:service kodları istiyor
															dto lari ve entitileri ayarla

															
															
															
															
													controllerınn bunla alakası yokmuş=>	iki kat interface olmuş 
													ondan görmüyordu
													businessta autofac map ekle ki adreslereini bulabilsinler
															business dependency resolveer autofac autofac business module
																bununn için autofac nuget-
																autofac extra dynamic
																gerekli yerleri coz
																castle core u unutma
																core utilities interceptors klasoru aç-3 ünü de ekle

																auth manager kodları:
																		 iki yere bağlılık vaar
																		 Iaccoutservice ve IToken Helper
																		 buradaki account core enttiesten geliyor
																		 business a mesajla klasoru-mesjalari hazirla
																account service	
																account manager kodlarını yaz
																account dal ile ilgili kodları yaz
																account nesnesi sadece core daki
																claimler sıkıntı çıkardı
																jwt ye giitm- operation clailmle ilgili yerleri kaldırdım düz accounttan gelenleri claim yapacak sadece

										
										success hatası alıyorum-
										startup u yapalım bi
										CORE da ıoc vedependency resolver leri yaptım
															login methodlarını düzenle

															auth  service:access tokeni görmedi-jwt deydi bu
													startupta-jwt ve dependency ile ilgili kısımları girince hata gittt
													---
													person entity-controller-dal service -manager
															entitisini yapmışız
															controllerda gerekli methodları yaz
															service de yaz
															servisi managera implemente et
															manager koldarını da yazdım




											

																		

								Account katmanında login yapmış kişi aynı user name e yeni bir account kaydetmesin
								account katmanında delete account- ve uppdate account ve change passsword olsun
										bunlarda change için emaili direkt alsın yani jwtden veya authdan vs çekelim
										update için user bilgileri direkt gelsin-update de sifre olmasın
										bunlarda Authorize attribute kullanabilirmiyiz?
								
								MUTLAKA HOCA GİBİ EXTENSİONLARI AYRI BİR YERE AL HOCADAKİ GİBİ YAP
								singletonları autofac ile recapteki gibi yap

								db? -appsettings-
								migration için design ve tools nugetleri kurdum dataaccesse
								dbsetleri düzgün yapmak lazım ki migration yapabilelim
								contexttte diğer ödevdeki db bağlantı kodlarını al
								contextte brtakım nugtler gerekli
								sql
								npgsql
								npgsql.efcore.postgresql
								extension.config
								efcore.sqlserver

								--
								persondaki get moethodu iççin dto -oluştur ve dalda gerekli methodları yap
								getdetails by id için hem ıdal hem efdal a methodları yaz
								
					!!! controllerda bu method acountid'yi otomatik almalı			GetAllPersonsByAccountId
					 HATA- service ve managerdeki Idata resultları data resulta- IResultları resulta çevirdim
					 succes ve message erroralr düzeldi

					 bir migration denemsi yapalım-olmadı context istiyor
					 contextteki eksiği ve apsetting hatasını düzelttim
					 ilk mig başarılı


					 varmı kkontrolü için Ibase e any methodu
					 -
					 autofac mapping singletonlarinin calismai için program cs
					 -
					 TEST 13 TE KALDIK- AUTH REGİSTER YAPAMIYOZ- OBJECT RWF
					EFERENCE NOT SETO TO NUL VS HATASI VERİYOR
					bu kontrolü icabında iptal edecezS
					test17- userexist kontrolünü controllerden akldırınca düzeldi

					register yapinca token ve mesaj dönüyor
					-

					-bize account ve person apilerinde authorize attribute lazım
					-swaggerda token kısmı oluşturup oluşan tokeni buradan vermemiz lazım
						bunun için startup extension dosyası
						tmm
					şimdi buton oluştu-login jwt oluşturduğu keyi girdim account çektim-
					logout yaptım account istedim vermedi-ok authorize çalışıyor



					personda personid ile çekmek çalışıyor
					account id ile getall person calisiyor 
					person add calisiyor ama-> account idyi ben giriyiom!!!!!!!!!!!!!

								 user id lerimizi claims nesnemizden alıp- sorgularda vs onu klllanmamızı istiyor

								
							ama register userregister dto ile userexist? kontrolü yapacak
							regsterda accees token oluturacak


							-
							hocanın yaptığı gibi staruptaki methotları startupextension klasörü oluşturup ieçrisine atsak daha sade olur sanki

							-
								

		mapping
								

